apply plugin: 'java'
apply plugin: 'application'

application {
    mainClass.set('example.OpenAiApiExample')
}

dependencies {
    implementation project(":service")

//dependency added by roostGPT
testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
testImplementation("com.fasterxml.jackson.core:jackson-databind:2.12.3")
testImplementation("com.fasterxml.jackson.core:jackson-annotations:2.12.3")
testImplementation("com.theokanning.openai:openai-client:0.1.0")
testImplementation('com.theokanning.openai:openai-service:0.1.0')
}

task runExampleOne(type: JavaExec) {
    mainClass.set('example.OpenAiApiExample')
    classpath = sourceSets.main.runtimeClasspath
    args = []
}

task runExampleTwo(type: JavaExec) {
    mainClass.set('example.OpenAiApiFunctionsExample')
    classpath = sourceSets.main.runtimeClasspath
    args = []
    standardInput = System.in
}

task runExampleThree(type: JavaExec) {
    mainClass.set('example.OpenAiApiFunctionsWIthStreamExample')
    classpath = sourceSets.main.runtimeClasspath
    args = []
    standardInput = System.in
}
apply plugin : 'jacoco'

test {
  reports.html.setDestination(file("$projectDir/testReport"));
  jacoco {
    enabled = true
    includeNoLocationClasses = false
    sessionId = "<auto-generated value>"
    dumpOnExit = true
    classDumpDir = null
    output = JacocoTaskExtension.Output.FILE
}

jacocoTestReport {
  reports {
      xml.required = false
      csv.required = false
      html.outputLocation =  file("$projectDir/coverageReport")
  }
}
}